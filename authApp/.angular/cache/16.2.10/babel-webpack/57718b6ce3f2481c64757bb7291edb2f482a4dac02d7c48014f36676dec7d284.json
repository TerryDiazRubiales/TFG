{"ast":null,"code":"import { computed, inject, effect } from '@angular/core';\nimport { AuthService } from './auth/services/auth.service';\nimport { AuthStatus } from './auth/interfaces';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nfunction AppComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \" Loading...\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_router_outlet_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"router-outlet\");\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.authService = inject(AuthService);\n    this.router = inject(Router);\n    this.finishedAuthCheck = computed(() => {\n      if (this.authService.authStatus() === AuthStatus.checking) {\n        return false;\n      }\n      return true;\n    });\n    this.authStatusChangedEffect = effect(() => {\n      switch (this.authService.authStatus()) {\n        case AuthStatus.checking:\n          return;\n        case AuthStatus.authenticated:\n          this.router.navigateByUrl('/dashboard');\n          return;\n        case AuthStatus.notAuthenticated:\n          this.router.navigateByUrl('/auth/login');\n          return;\n      }\n      this.authService.authStatus();\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_h1_0_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵtemplate(1, AppComponent_router_outlet_1_Template, 1, 0, \"router-outlet\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.finishedAuthCheck());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.finishedAuthCheck());\n      }\n    },\n    dependencies: [i1.NgIf, i2.RouterOutlet],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["computed","inject","effect","AuthService","AuthStatus","Router","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","AppComponent","constructor","authService","router","finishedAuthCheck","authStatus","checking","authStatusChangedEffect","authenticated","navigateByUrl","notAuthenticated","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_h1_0_Template","AppComponent_router_outlet_1_Template","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\aidal\\OneDrive\\Escritorio\\PF_TDR\\authApp\\src\\app\\app.component.ts","C:\\Users\\aidal\\OneDrive\\Escritorio\\PF_TDR\\authApp\\src\\app\\app.component.html"],"sourcesContent":["import { Component, computed, inject, effect } from '@angular/core';\nimport { AuthService } from './auth/services/auth.service';\nimport { AuthStatus } from './auth/interfaces';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  private authService = inject( AuthService );\n  private router = inject ( Router );\n  public finishedAuthCheck = computed<boolean>( ()=> {\n\n    if ( this.authService.authStatus() === AuthStatus.checking ) {\n      return false;\n    }\n    \n    return true;\n\n  });\n\n  public authStatusChangedEffect = effect(() => {\n\n    switch( this.authService.authStatus() ) {\n\n      case AuthStatus.checking:\n      return;\n\n      case AuthStatus.authenticated:\n        this.router.navigateByUrl('/dashboard');\n      return;\n\n      case AuthStatus.notAuthenticated:\n        this.router.navigateByUrl('/auth/login');\n        return;\n    }\n\n    this.authService.authStatus();\n    \n  });\n\n}\n","<h1 *ngIf=\"!finishedAuthCheck()\">\r\n    Loading...\r\n</h1>\r\n\r\n<router-outlet *ngIf=\"finishedAuthCheck()\"/> "],"mappings":"AAAA,SAAoBA,QAAQ,EAAEC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AACnE,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,MAAM,QAAQ,iBAAiB;;;;;;ICHxCC,EAAA,CAAAC,cAAA,SAAiC;IAC7BD,EAAA,CAAAE,MAAA,oBACJ;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;IAELH,EAAA,CAAAI,SAAA,oBAA4C;;;ADO5C,OAAM,MAAOC,YAAY;EALzBC,YAAA;IAOU,KAAAC,WAAW,GAAGZ,MAAM,CAAEE,WAAW,CAAE;IACnC,KAAAW,MAAM,GAAGb,MAAM,CAAGI,MAAM,CAAE;IAC3B,KAAAU,iBAAiB,GAAGf,QAAQ,CAAW,MAAI;MAEhD,IAAK,IAAI,CAACa,WAAW,CAACG,UAAU,EAAE,KAAKZ,UAAU,CAACa,QAAQ,EAAG;QAC3D,OAAO,KAAK;;MAGd,OAAO,IAAI;IAEb,CAAC,CAAC;IAEK,KAAAC,uBAAuB,GAAGhB,MAAM,CAAC,MAAK;MAE3C,QAAQ,IAAI,CAACW,WAAW,CAACG,UAAU,EAAE;QAEnC,KAAKZ,UAAU,CAACa,QAAQ;UACxB;QAEA,KAAKb,UAAU,CAACe,aAAa;UAC3B,IAAI,CAACL,MAAM,CAACM,aAAa,CAAC,YAAY,CAAC;UACzC;QAEA,KAAKhB,UAAU,CAACiB,gBAAgB;UAC9B,IAAI,CAACP,MAAM,CAACM,aAAa,CAAC,aAAa,CAAC;UACxC;;MAGJ,IAAI,CAACP,WAAW,CAACG,UAAU,EAAE;IAE/B,CAAC,CAAC;;EAEH,QAAAM,CAAA,G;qBAlCYX,YAAY;EAAA;EAAA,QAAAY,EAAA,G;UAAZZ,YAAY;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXzBxB,EAAA,CAAA0B,UAAA,IAAAC,0BAAA,gBAEK;QAEL3B,EAAA,CAAA0B,UAAA,IAAAE,qCAAA,2BAA4C;;;QAJvC5B,EAAA,CAAA6B,UAAA,UAAAJ,GAAA,CAAAhB,iBAAA,GAA0B;QAIfT,EAAA,CAAA8B,SAAA,GAAyB;QAAzB9B,EAAA,CAAA6B,UAAA,SAAAJ,GAAA,CAAAhB,iBAAA,GAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}