{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { AuthService } from '../../services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginPageComponent {\n  constructor() {\n    this.fb = inject(FormBuilder);\n    this.authService = inject(AuthService);\n    this.router = inject(Router);\n    this.myForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  login() {\n    const {\n      email,\n      password\n    } = this.myForm.value;\n    this.authService.login(email, password).subscribe({\n      next: () => this.router.navigateByUrl('./dashboard'),\n      error: message => {\n        Swal.fire('Error', message, 'error');\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginPageComponent_Factory(t) {\n    return new (t || LoginPageComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPageComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[\"autocomplete\", \"off\", 1, \"login100-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"login100-form-title\", \"p-b-49\"], [1, \"wrap-input100\", \"m-b-23\"], [1, \"label-input100\"], [\"type\", \"email\", \"placeholder\", \"Correo electr\\u00F3nico\", \"formControlName\", \"email\", 1, \"input100\"], [1, \"focus-input100\"], [1, \"wrap-input100\"], [\"type\", \"password\", \"placeholder\", \"Ingrese su contrase\\u00F1a\", \"formControlName\", \"password\", 1, \"input100\"], [1, \"text-right\", \"p-t-8\", \"p-b-31\"], [1, \"container-login100-form-btn\"], [1, \"wrap-login100-form-btn\"], [1, \"login100-form-bgbtn\"], [\"type\", \"submit\", 1, \"login100-form-btn\", 3, \"disabled\"], [1, \"flex-col-c\", \"p-t-60\"], [1, \"txt1\", \"p-b-17\"], [\"routerLink\", \"/auth/register\", 1, \"txt2\"]],\n    template: function LoginPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtext(2, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"span\", 3);\n        i0.ɵɵtext(5, \"Correo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4)(7, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"span\", 3);\n        i0.ɵɵtext(10, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7)(12, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"div\", 8);\n        i0.ɵɵelementStart(14, \"div\", 9)(15, \"div\", 10);\n        i0.ɵɵelement(16, \"div\", 11);\n        i0.ɵɵelementStart(17, \"button\", 12);\n        i0.ɵɵtext(18, \" Login \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 13)(20, \"span\", 14);\n        i0.ɵɵtext(21, \" \\u00BFNo tienes cuenta? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"a\", 15);\n        i0.ɵɵtext(23, \" Crear una aqu\\u00ED \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"disabled\", ctx.myForm.invalid);\n      }\n    },\n    dependencies: [i1.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["inject","FormBuilder","Validators","Router","Swal","AuthService","LoginPageComponent","constructor","fb","authService","router","myForm","group","email","required","password","minLength","login","value","subscribe","next","navigateByUrl","error","message","fire","_","_2","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","invalid"],"sources":["C:\\Users\\aidal\\OneDrive\\Escritorio\\PF_TDR\\authApp\\src\\app\\auth\\pages\\login-page\\login-page.component.ts","C:\\Users\\aidal\\OneDrive\\Escritorio\\PF_TDR\\authApp\\src\\app\\auth\\pages\\login-page\\login-page.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2' \nimport { AuthService } from '../../services/auth.service';\nimport { DashboardModule } from 'src/app/dashboard/dashboard.module';\n\n@Component({\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n\n  private  fb         = inject( FormBuilder );\n  private authService = inject ( AuthService );\n  private router      = inject( Router )\n\n  public myForm: FormGroup = this.fb.group({\n    email: [ '', [Validators.required, Validators.email ]], \n    password: [ '', [Validators.required, Validators.minLength(8) ]]\n  });\n\n  login() {\n    const { email, password } = this.myForm.value;\n    \n    this.authService.login(email, password)\n    .subscribe({\n\n      next: () => this.router.navigateByUrl('./dashboard'),\n      error: (message) => {\n        Swal.fire('Error', message, 'error' )\n      }\n\n    })\n\n  }\n\n\n}\n","<form class=\"login100-form\"\n      autocomplete=\"off\"\n      [formGroup]=\"myForm\"\n      (ngSubmit)=\"login()\"> \n\n    <span class=\"login100-form-title p-b-49\">\n        Login\n    </span>\n\n    <div class=\"wrap-input100 m-b-23\">\n        <span class=\"label-input100\">Correo</span>\n        <input class=\"input100\"\n               type=\"email\"\n               placeholder=\"Correo electrónico\"\n               formControlName=\"email\">\n        <span class=\"focus-input100\"></span>\n    </div>\n\n    <div class=\"wrap-input100\">\n        <span class=\"label-input100\">Contraseña</span>\n        <input class=\"input100\"\n               type=\"password\"\n               placeholder=\"Ingrese su contraseña\"\n               formControlName=\"password\">\n        <span class=\"focus-input100\"></span>\n    </div>\n\n    <div class=\"text-right p-t-8 p-b-31\"></div>\n\n    <div class=\"container-login100-form-btn\">\n        <div class=\"wrap-login100-form-btn\">\n            <div class=\"login100-form-bgbtn\"></div>\n            <button class=\"login100-form-btn\"\n                    [disabled]=\"myForm.invalid\"\n                    type=\"submit\">\n                Login\n            </button>\n        </div>\n    </div>\n\n    <div class=\"flex-col-c p-t-60\">\n        <span class=\"txt1 p-b-17\">\n            ¿No tienes cuenta?\n        </span>\n\n        <a routerLink=\"/auth/register\" class=\"txt2\">\n            Crear una aquí\n        </a>\n    </div>\n</form>"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,WAAW,QAAQ,6BAA6B;;;;AAOzD,OAAM,MAAOC,kBAAkB;EAJ/BC,YAAA;IAMW,KAAAC,EAAE,GAAWR,MAAM,CAAEC,WAAW,CAAE;IACnC,KAAAQ,WAAW,GAAGT,MAAM,CAAGK,WAAW,CAAE;IACpC,KAAAK,MAAM,GAAQV,MAAM,CAAEG,MAAM,CAAE;IAE/B,KAAAQ,MAAM,GAAc,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MACvCC,KAAK,EAAE,CAAE,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACW,KAAK,CAAE,CAAC;MACtDE,QAAQ,EAAE,CAAE,EAAE,EAAE,CAACb,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,CAAE;KAChE,CAAC;;EAEFC,KAAKA,CAAA;IACH,MAAM;MAAEJ,KAAK;MAAEE;IAAQ,CAAE,GAAG,IAAI,CAACJ,MAAM,CAACO,KAAK;IAE7C,IAAI,CAACT,WAAW,CAACQ,KAAK,CAACJ,KAAK,EAAEE,QAAQ,CAAC,CACtCI,SAAS,CAAC;MAETC,IAAI,EAAEA,CAAA,KAAM,IAAI,CAACV,MAAM,CAACW,aAAa,CAAC,aAAa,CAAC;MACpDC,KAAK,EAAGC,OAAO,IAAI;QACjBnB,IAAI,CAACoB,IAAI,CAAC,OAAO,EAAED,OAAO,EAAE,OAAO,CAAE;MACvC;KAED,CAAC;EAEJ;EAAC,QAAAE,CAAA,G;qBAxBUnB,kBAAkB;EAAA;EAAA,QAAAoB,EAAA,G;UAAlBpB,kBAAkB;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX/BE,EAAA,CAAAC,cAAA,cAG2B;QAArBD,EAAA,CAAAE,UAAA,sBAAAC,qDAAA;UAAA,OAAYJ,GAAA,CAAAjB,KAAA,EAAO;QAAA,EAAC;QAEtBkB,EAAA,CAAAC,cAAA,cAAyC;QACrCD,EAAA,CAAAI,MAAA,cACJ;QAAAJ,EAAA,CAAAK,YAAA,EAAO;QAEPL,EAAA,CAAAC,cAAA,aAAkC;QACDD,EAAA,CAAAI,MAAA,aAAM;QAAAJ,EAAA,CAAAK,YAAA,EAAO;QAC1CL,EAAA,CAAAM,SAAA,eAG+B;QAEnCN,EAAA,CAAAK,YAAA,EAAM;QAENL,EAAA,CAAAC,cAAA,aAA2B;QACMD,EAAA,CAAAI,MAAA,uBAAU;QAAAJ,EAAA,CAAAK,YAAA,EAAO;QAC9CL,EAAA,CAAAM,SAAA,gBAGkC;QAEtCN,EAAA,CAAAK,YAAA,EAAM;QAENL,EAAA,CAAAM,SAAA,cAA2C;QAE3CN,EAAA,CAAAC,cAAA,cAAyC;QAEjCD,EAAA,CAAAM,SAAA,eAAuC;QACvCN,EAAA,CAAAC,cAAA,kBAEsB;QAClBD,EAAA,CAAAI,MAAA,eACJ;QAAAJ,EAAA,CAAAK,YAAA,EAAS;QAIjBL,EAAA,CAAAC,cAAA,eAA+B;QAEvBD,EAAA,CAAAI,MAAA,iCACJ;QAAAJ,EAAA,CAAAK,YAAA,EAAO;QAEPL,EAAA,CAAAC,cAAA,aAA4C;QACxCD,EAAA,CAAAI,MAAA,6BACJ;QAAAJ,EAAA,CAAAK,YAAA,EAAI;;;QA7CNL,EAAA,CAAAO,UAAA,cAAAR,GAAA,CAAAvB,MAAA,CAAoB;QA+BNwB,EAAA,CAAAQ,SAAA,IAA2B;QAA3BR,EAAA,CAAAO,UAAA,aAAAR,GAAA,CAAAvB,MAAA,CAAAiC,OAAA,CAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}