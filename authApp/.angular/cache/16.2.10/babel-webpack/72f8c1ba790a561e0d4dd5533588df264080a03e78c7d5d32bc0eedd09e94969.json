{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/auth.service\";\nexport class RegisterPageComponent {\n  constructor(fb, router, authService) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.myForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  register() {\n    const {\n      name,\n      email,\n      password\n    } = this.myForm.value;\n    this.authService.register(name, email, password).subscribe({\n      next: ok => {\n        if (ok === true) {\n          this.router.navigateByUrl('/dashboard');\n        } else {\n          Swal.fire('Error', ok, 'error');\n        }\n      },\n      error: err => {\n        Swal.fire('Error', 'No se pudo realizar el registro', 'error');\n      }\n    });\n  }\n  static #_ = this.ɵfac = function RegisterPageComponent_Factory(t) {\n    return new (t || RegisterPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterPageComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 27,\n    vars: 1,\n    consts: [[1, \"limiter\"], [1, \"container-login100\"], [1, \"wrap-login100\", \"p-t-50\", \"p-b-90\"], [1, \"login100-form\", \"validate-form\", \"flex-sb\", \"flex-w\", 3, \"formGroup\", \"ngSubmit\"], [1, \"login100-form-title\", \"p-b-51\"], [1, \"wrap-input100\", \"m-b-16\"], [\"type\", \"text\", \"name\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"input100\"], [1, \"focus-input100\"], [\"type\", \"text\", \"name\", \"nombre\", \"placeholder\", \"Nombre y apellidos\", \"formControlName\", \"name\", 1, \"input100\"], [\"data-validate\", \"Password is required\", 1, \"wrap-input100\", \"m-b-16\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"input100\"], [1, \"flex-sb-m\", \"w-full\", \"p-t-3\", \"p-b-24\"], [1, \"contact100-form-checkbox\"], [\"id\", \"ckb1\", \"type\", \"checkbox\", \"name\", \"remember-me\", 1, \"input-checkbox100\"], [\"for\", \"ckb1\", 1, \"label-checkbox100\"], [\"routerLink\", \"/registro\", 1, \"txt1\"], [1, \"container-login100-form-btn\", \"m-t-17\"], [\"type\", \"submit\", 1, \"login100-form-btn\"]],\n    template: function RegisterPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterPageComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵtext(4, \" > \");\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵtext(6, \" Crear nueva cuenta \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelement(8, \"input\", 6)(9, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵelement(11, \"input\", 8)(12, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵelement(14, \"input\", 10)(15, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 11)(17, \"div\", 12);\n        i0.ɵɵelement(18, \"input\", 13);\n        i0.ɵɵelementStart(19, \"label\", 14);\n        i0.ɵɵtext(20, \" Recordar mi usuario \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\")(22, \"a\", 15);\n        i0.ɵɵtext(23, \" \\u00BFYa tienes cuenta? / Ingresar \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 16)(25, \"button\", 17);\n        i0.ɵɵtext(26, \" Crear cuenta \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      }\n    },\n    dependencies: [i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","Swal","RegisterPageComponent","constructor","fb","router","authService","myForm","group","name","required","email","password","minLength","register","value","subscribe","next","ok","navigateByUrl","fire","error","err","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","AuthService","_2","selectors","decls","vars","consts","template","RegisterPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegisterPageComponent_Template_form_ngSubmit_3_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\aidal\\OneDrive\\Escritorio\\PF_TDR\\authApp\\src\\app\\auth\\pages\\register-page\\register-page.component.ts","C:\\Users\\aidal\\OneDrive\\Escritorio\\PF_TDR\\authApp\\src\\app\\auth\\pages\\register-page\\register-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { AuthService } from '../../services/auth.service';\n\n\n@Component({\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent {\n  myForm: FormGroup = this.fb.group({\n    name:     ['', [ Validators.required ]],\n    email:    ['', [ Validators.required, Validators.email ]],\n    password: ['', [ Validators.required, Validators.minLength(6) ]],\n  });\n\n  constructor( private fb: FormBuilder,\n               private router: Router,\n               private authService: AuthService ) { }\n\n  register() {\n    const { name, email, password } = this.myForm.value;\n\n    this.authService.register(name, email, password)\n    .subscribe({\n      next: (ok) => {\n        if (ok === true) {\n          this.router.navigateByUrl('/dashboard');\n        } else {\n          Swal.fire('Error', ok, 'error');\n        }\n      },\n      error: (err) => {\n        Swal.fire('Error', 'No se pudo realizar el registro', 'error');\n      }\n    });\n  }\n\n\n\n}\n","<div class=\"limiter\">\n    <div class=\"container-login100\">\n        <div class=\"wrap-login100 p-t-50 p-b-90\">\n            <form class=\"login100-form validate-form flex-sb flex-w\"\n            [formGroup]=\"myForm\"\n            (ngSubmit)=\"register()\"> >\n\n                <span class=\"login100-form-title p-b-51\">\n                    Crear nueva cuenta\n                </span>\n\n                <!-- <span class=\"text-danger\">El correo es obligatorio</span> -->\n                <div class=\"wrap-input100 m-b-16\">\n                    <input class=\"input100\" \n                           type=\"text\" \n                           name=\"email\" \n                           placeholder=\"Email\"\n                           formControlName=\"email\">\n\n                    <span class=\"focus-input100\"></span>\n                </div>\n\n                <!-- <span class=\"text-danger\">El nombre es obligatorio</span> -->\n                <div class=\"wrap-input100 m-b-16\">\n                    <input class=\"input100\" \n                           type=\"text\" \n                           name=\"nombre\" \n                           placeholder=\"Nombre y apellidos\"\n                           formControlName=\"name\">\n\n                    <span class=\"focus-input100\"></span>\n                </div>\n                \n                <!-- <span class=\"text-danger\">La contraseña debe de ser más de 6 letras</span> -->\n                <div class=\"wrap-input100 m-b-16\" data-validate = \"Password is required\">\n                    <input class=\"input100\"\n                           type=\"password\" \n                           name=\"password\" \n                           placeholder=\"Password\"\n                           formControlName=\"password\">\n                    <span class=\"focus-input100\"></span>\n                </div>\n                \n                <div class=\"flex-sb-m w-full p-t-3 p-b-24\">\n                    <div class=\"contact100-form-checkbox\">\n                        <input class=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\">\n                        <label class=\"label-checkbox100\" for=\"ckb1\">\n                            Recordar mi usuario\n                        </label>\n                    </div>\n\n                    <div>\n                        <a routerLink=\"/registro\" class=\"txt1\">\n                            ¿Ya tienes cuenta? / Ingresar\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"container-login100-form-btn m-t-17\">\n                    <button class=\"login100-form-btn\" type=\"submit\" >\n                        Crear cuenta\n                    </button>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}