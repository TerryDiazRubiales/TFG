{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { AuthStatus } from '../interfaces';\nexport const isNotAuthenticatedGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.authStatus() === AuthStatus.authenticated) {\n    router.navigateByUrl('/dashboard');\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["inject","Router","AuthService","AuthStatus","isNotAuthenticatedGuard","route","state","authService","router","authStatus","authenticated","navigateByUrl"],"sources":["C:\\Users\\aidal\\OneDrive\\Escritorio\\PF_TDR\\authApp\\src\\app\\auth\\guards\\is-not-authenticated.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { AuthStatus } from '../interfaces';\r\n\r\nexport const isNotAuthenticatedGuard: CanActivateFn = (route, state) => {\r\n\r\n  const authService = inject( AuthService );\r\n  const router      = inject( Router );\r\n\r\n  if ( authService.authStatus() === AuthStatus.authenticated ) {\r\n    router.navigateByUrl('/dashboard');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,UAAU,QAAQ,eAAe;AAE1C,OAAO,MAAMC,uBAAuB,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAErE,MAAMC,WAAW,GAAGP,MAAM,CAAEE,WAAW,CAAE;EACzC,MAAMM,MAAM,GAAQR,MAAM,CAAEC,MAAM,CAAE;EAEpC,IAAKM,WAAW,CAACE,UAAU,EAAE,KAAKN,UAAU,CAACO,aAAa,EAAG;IAC3DF,MAAM,CAACG,aAAa,CAAC,YAAY,CAAC;IAClC,OAAO,KAAK;;EAGd,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}